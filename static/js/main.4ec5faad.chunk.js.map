{"version":3,"sources":["constants.js","reducers/index.js","reducers/reducer_user.js","reducers/reducer_news.js","reducers/reducer_error.js","reducers/reducer_loading.js","reducers/reducer_deleted.js","config.js","helpers/auth_helpers.js","actions/index.js","middlewares/jwt.js","helpers/form_helpers.js","App.js","ui/header_login.js","ui/header.js","ui/footer.js","ui/post/post_buttons.js","ui/post/post_info.js","ui/post/post_short.js","ui/spinner.js","ui/info.js","routes/posts_list.js","routes/post_full.js","routes/edit_post.js","routes/add_post.js","serviceWorker.js","index.js"],"names":["errors","en","ru","getErrorText","message","errorText","find","error","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_SUCCESS","LOGOUT_FAILED","START_LOADING","GET_NEWS_SUCCESS","GET_NEWS_FAILED","GET_POST_SUCCESS","GET_POST_FAILED","EDIT_POST_SUCCESS","EDIT_POST_FAILED","ADD_POST_SUCCESS","ADD_POST_FAILED","DELETE_POST_SUCCESS","DELETE_POST_FAILED","rootReducer","combineReducers","user","state","arguments","length","undefined","action","type","t","Object","objectSpread","payload","isAuth","userName","userId","token","googleToken","news","feeds","feed","isLoading","isDeleted","_id","form","formReducer","API_URL","readFromLocalStorage","localStorage","getItem","startLoading","loginSuccess","setItem","writeToLocalStorage","axios","defaults","headers","common","loginFailed","err","getNews","dispatch","get","concat","then","response","data","catch","getNewsFailed","getPost","id","getPostFailed","deletePost","delete","deletePostFailed","min","store","Login","this","props","react_default","a","createElement","className","onClick","signOut","Link","to","title","signIn","Component","connect","window","gapi","auth2","getAuthInstance","scope","getAuthResponse","id_token","getBasicProfile","getName","post","jwt","decode","res","removeItem","signoutFailed","Header","header_login","Footer","href","target","rel","PostButtons","_this$props","confirm","PostInfo","author","date","Post","content","touchDate","userIsAuthor","shortContent","substr","Date","toLocaleDateString","day","month","year","post_buttons","post_info","Spinner","Info","PostsList","spinner","map","post_short","key","creator","displayName","createDate","info","PostFull","match","params","history","push","_this$props2","console","log","required","value","renderTitleField","field","input","label","_field$meta","meta","touched","Fragment","assign","placeholder","renderContentField","_field$meta2","rows","EditPost","prevProps","initialize","initialized","errorMessage","handleSubmit","submitting","editPost","onSubmit","event","Field","component","name","validate","disabled","ReduxEditForm","reduxForm","put","editPostFailed","SubmissionError","AddPost","pristine","addPost","addPostFailed","script","document","src","onload","load","init","client_id","process","body","appendChild","initGoogleAPI","createStore","reducers","applyMiddleware","next","userData","hasOwnProperty","googleExpire","jsonwebtoken","exp","now","getTime","GoogleAuth","currentUser","reloadAuthResponse","thunk","App","es","BrowserRouter","basename","header","Switch","Route","exact","path","footer","Boolean","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ec5faad.chunk.js","sourcesContent":["//  Коды/тексты ошибок для отображения\nexport const errors = [\n  { en: \"Title must not be empty\", ru: \"Заголовок не может быть пустым\" },\n  { en: \"Content must not be empty\", ru: \"Контент не может быть пустым\" },\n  { en: \"Bad news item ID\", ru: \"Новость не найдена\" },\n  { en: \"No token provided\", ru: \"В запросе отсутствует токен\" },\n  { en: \"Not authorized to view profile\", ru: \"Не авторизован для просмотра профайла\" },\n  { en: \"Captcha is not passed\", ru: \"Не была передана Captcha\" },\n  { en: \"Bad Google cliend ID\", ru: \"Неверный Google Client ID\" },\n  { en: \"Error on server while verifying token\", ru: \"Ошибка на сервере при проверке токена\" },\n  { en: \"Bad credentials\", ru: \"Неверные данные для входа\" },\n  { en: \"News item not found\", ru: \"Новость не найдена\" },\n  {\n    en: \"Not authorized to edit this news item\",\n    ru: \"Вы не авторизованы для редактирования этой новости\"\n  },\n  {\n    en: \"Not authorized to delete this news item\",\n    ru: \"Вы не авторизованы для удаления этой новости\"\n  },\n  { en: \"User not found\", ru: \"Пользователь не найден\" },\n  { en: \"User already exists\", ru: \"Пользователь уже существует\" },\n  {\n    en: \"Password must contain at least 6 characters\",\n    ru: \"Пароль должен быть минимум 6 символов\"\n  },\n  { en: \"Password must not be empty\", ru: \"Пароль не должен быть пустым\" },\n  { en: \"Username must not be empty\", ru: \"Имя пользователя не должно быть пустым\" },\n  { en: \"jwt expired\", ru: \"Токен авторизации устарел. Попробуйте войти еще раз\" }\n];\n\nexport const getErrorText = message => {\n  const errorText = errors.find(error => error.en === message);\n  return errorText ? errorText.ru : message;\n};\n\n//Actions types\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILED = \"LOGOUT_FAILED\";\nexport const START_LOADING = \"START_LOADING\";\nexport const GET_NEWS_SUCCESS = \"GET_NEWS_SUCCESS\";\nexport const GET_NEWS_FAILED = \"GET_NEWS_FAILED\";\nexport const GET_POST_SUCCESS = \"GET_POST_SUCCESS\";\nexport const GET_POST_FAILED = \"GET_POST_FAILED\";\nexport const EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\";\nexport const EDIT_POST_FAILED = \"EDIT_POST_FAILED\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILED = \"ADD_POST_FAILED\";\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\nexport const DELETE_POST_FAILED = \"DELETE_POST_FAILED\";\n","import { combineReducers } from \"redux\";\n\nimport user from \"./reducer_user\";\nimport news from \"./reducer_news\";\nimport error from \"./reducer_error\";\nimport isLoading from \"./reducer_loading\";\nimport isDeleted from \"./reducer_deleted\";\nimport { reducer as formReducer } from \"redux-form\";\n\nconst rootReducer = combineReducers({\n  user,\n  news,\n  error,\n  isLoading,\n  isDeleted,\n  form: formReducer\n});\n\nexport default rootReducer;\n","import * as t from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case t.LOGIN_SUCCESS:\n      return { ...action.payload, isAuth: true };\n\n    case t.LOGOUT_SUCCESS:\n      return { userName: null, userId: null, token: null, googleToken: null, isAuth: false };\n\n    default:\n      return state;\n  }\n}\n","import * as t from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case t.GET_NEWS_SUCCESS:\n      return action.payload.feeds;\n\n    case t.GET_POST_SUCCESS:\n      return [action.payload.feed];\n\n    default:\n      return state;\n  }\n}\n","import * as t from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case t.GET_NEWS_FAILED:\n    case t.GET_POST_FAILED:\n    case t.ADD_POST_FAILED:\n    case t.EDIT_POST_FAILED:\n    case t.DELETE_POST_FAILED:\n    case t.LOGIN_FAILED:\n    case t.LOGOUT_FAILED:\n      //  Для некоторых ошибок текст так и не придумал, поэтому если приходит экшен с пустым payload.error,\n      //  будем действовать как гугл - в любой непонятной ситуации выводить Опаньки:)\n      return action.payload.error || \"Опаньки.. Что-то пошло не так :(\";\n\n    case t.GET_NEWS_SUCCESS:\n    case t.GET_POST_SUCCESS:\n    case t.ADD_POST_SUCCESS:\n    case t.EDIT_POST_SUCCESS:\n    case t.DELETE_POST_SUCCESS:\n    case t.LOGIN_SUCCESS:\n    case t.LOGOUT_SUCCESS:\n    case \"@@redux-form/START_SUBMIT\":\n    case \"@@redux-form/CHANGE\":\n      //  Нужно для обнуления ошибки при изменении данных в форме redux-form\n      return false;\n\n    default:\n      return state;\n  }\n}\n","import * as t from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case t.START_LOADING:\n      return true;\n\n    default:\n      return false;\n  }\n}\n","import * as t from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case t.DELETE_POST_SUCCESS:\n      return action.payload._id;\n\n    default:\n      return null;\n  }\n}\n","// Адрес вашего бэкенд-сервера (https://github.com/maxfarseer/backend-tz3)\nexport const API_URL = \"https://news-app-mihanik.herokuapp.com/api/v1\";\n","export function initGoogleAPI() {\n  const script = document.createElement(\"script\");\n  script.src = \"https://apis.google.com/js/platform.js\";\n\n  script.onload = () => {\n    window.gapi.load(\"auth2\", function() {\n      window.gapi.auth2.init({\n        client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID\n      });\n    });\n  };\n\n  document.body.appendChild(script);\n}\n\n//  Функции для работы с localStorage - чтение/запись/очистка\nexport function writeToLocalStorage(token, googleToken, userName, userId) {\n  if (!token || !googleToken || !userName || !userId) {\n    return false;\n  }\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"googleToken\", googleToken);\n  localStorage.setItem(\"userName\", userName);\n  localStorage.setItem(\"userId\", userId);\n}\n\nexport function readFromLocalStorage() {\n  const token = localStorage.getItem(\"token\");\n  const googleToken = localStorage.getItem(\"googleToken\");\n  const userName = localStorage.getItem(\"userName\");\n  const userId = localStorage.getItem(\"userId\");\n  return { token, googleToken, userName, userId };\n}\n\nexport function clearLocalStorage() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"googleToken\");\n  localStorage.removeItem(\"userName\");\n  localStorage.removeItem(\"userId\");\n}\n","import axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport jwt from \"jsonwebtoken\";\nimport { SubmissionError } from \"redux-form\";\nimport * as t from \"../constants\";\nimport {\n  readFromLocalStorage,\n  writeToLocalStorage,\n  clearLocalStorage\n} from \"../helpers/auth_helpers\";\n\n//  Получаем JWT токен из localStorage и устанавливаем его\n//  в качестве default хедера для Axios запросов\naxios.defaults.headers.common[\"x-access-token\"] = readFromLocalStorage().token || null;\n\nfunction startLoading() {\n  return { type: t.START_LOADING };\n}\n\n//  Sign In\nexport function signIn() {\n  return dispatch => {\n    const GoogleAuth = window.gapi.auth2.getAuthInstance();\n    return GoogleAuth.signIn({ scope: \"profile email\" })\n      .then(user => {\n        const googleToken = user.getAuthResponse().id_token;\n        const userName = user.getBasicProfile().getName();\n        return axios\n          .post(`${API_URL}/auth/google`, { token: googleToken })\n          .then(response => {\n            const token = response.data.token;\n            //  Получаем id пользователя из JWT токена\n            const userId = jwt.decode(token).id;\n            dispatch(loginSuccess(token, googleToken, userName, userId));\n          })\n          .catch(err => dispatch(loginFailed(err)));\n      })\n      .catch(err => dispatch(loginFailed(err)));\n  };\n}\n\nexport function loginSuccess(token, googleToken, userName, userId) {\n  writeToLocalStorage(token, googleToken, userName, userId);\n  axios.defaults.headers.common[\"x-access-token\"] = token;\n\n  return {\n    type: t.LOGIN_SUCCESS,\n    payload: { token, googleToken, userName, userId }\n  };\n}\n\nfunction loginFailed(err) {\n  return { type: t.LOGIN_FAILED, payload: err };\n}\n\n//  Sign Out\nexport function signOut() {\n  return dispatch => {\n    const GoogleAuth = window.gapi.auth2.getAuthInstance();\n    return GoogleAuth.signOut()\n      .then(res => dispatch(signoutSuccess()))\n      .catch(err => dispatch(signoutFailed(err)));\n  };\n}\n\nfunction signoutSuccess() {\n  clearLocalStorage();\n  return { type: t.LOGOUT_SUCCESS };\n}\n\nfunction signoutFailed(err) {\n  return { type: t.LOGOUT_FAILED, payload: err };\n}\n\n//  Get News List\nexport function getNews() {\n  return dispatch => {\n    dispatch(startLoading());\n    return axios\n      .get(`${API_URL}/feeds`)\n      .then(response => dispatch(getNewsSuccess(response.data)))\n      .catch(err => dispatch(getNewsFailed(err)));\n  };\n}\n\nfunction getNewsSuccess(data) {\n  return { type: t.GET_NEWS_SUCCESS, payload: data };\n}\n\nfunction getNewsFailed(err) {\n  return { type: t.GET_NEWS_FAILED, payload: err };\n}\n\n//  Get Single Post\nexport function getPost(id) {\n  return dispatch => {\n    dispatch(startLoading());\n    return axios\n      .get(`${API_URL}/feeds/${id}`)\n      .then(response => dispatch(getPostSuccess(response.data)))\n      .catch(err => dispatch(getPostFailed(err.response.data)));\n  };\n}\n\nfunction getPostSuccess(data) {\n  return { type: t.GET_POST_SUCCESS, payload: data };\n}\n\nfunction getPostFailed(err) {\n  return { type: t.GET_POST_FAILED, payload: err };\n}\n\n//  Edit Post\nexport function editPost(id, data) {\n  return dispatch => {\n    dispatch(startLoading());\n    return axios\n      .put(`${API_URL}/feeds/${id}`, { title: data.title, content: data.content })\n      .then(response => dispatch(editPostSuccess(response.data)))\n      .catch(err => {\n        dispatch(editPostFailed(err.response.data));\n        throw new SubmissionError({ message: err.response.data });\n      });\n  };\n}\n\nfunction editPostSuccess(data) {\n  return { type: t.EDIT_POST_SUCCESS, payload: data };\n}\n\nfunction editPostFailed(err) {\n  return { type: t.EDIT_POST_FAILED, payload: err };\n}\n\n//  Add Post\nexport function addPost(data) {\n  return dispatch => {\n    dispatch(startLoading());\n    return axios\n      .post(`${API_URL}/feeds`, { title: data.title, content: data.content })\n      .then(response => dispatch(addPostSuccess(response.data)))\n      .catch(err => {\n        dispatch(addPostFailed(err.response.data));\n        throw new SubmissionError({ message: err.response.data });\n      });\n  };\n}\n\nfunction addPostSuccess(data) {\n  return { type: t.ADD_POST_SUCCESS, payload: data };\n}\n\nfunction addPostFailed(err) {\n  return { type: t.ADD_POST_FAILED, payload: err };\n}\n\n//  Delete Post\nexport function deletePost(id) {\n  return dispatch => {\n    dispatch(startLoading());\n    return axios\n      .delete(`${API_URL}/feeds/${id}`)\n      .then(response => {\n        dispatch(deletePostSuccess(response.data));\n        //  Если был удален пост, нужно получить новый список новостей\n        dispatch(getNews());\n      })\n      .catch(err => dispatch(deletePostFailed(err)));\n  };\n}\n\nfunction deletePostSuccess(data) {\n  return { type: t.DELETE_POST_SUCCESS, payload: data };\n}\n\nfunction deletePostFailed(err) {\n  return { type: t.DELETE_POST_FAILED, payload: err };\n}\n","import axios from \"axios\";\nimport jsonwebtoken from \"jsonwebtoken\";\nimport { API_URL } from \"../config\";\nimport { loginSuccess } from \"../actions\";\nimport { readFromLocalStorage } from \"../helpers/auth_helpers\";\nimport * as t from \"../constants\";\n\n//  middleware для проверки и обновления JWT токена\nexport const jwt = store => next => action => {\n  //  Проверяем, что есть google токен и что загрузился объект window.gapi.auth2\n  const userData = readFromLocalStorage();\n  if (userData.googleToken && window.gapi && window.gapi.hasOwnProperty(\"auth2\")) {\n    //  Для передачи в функцию loginSuccess и записи в state нужны userName и googleToken\n    const { userName, googleToken } = userData;\n\n    //  Берем из гугловского JWT значение exp и переводим в миллисекунды\n    const googleExpire = jsonwebtoken.decode(googleToken).exp * 1000 || null;\n    const now = new Date().getTime();\n\n    //  Создаем инстанс с методами Google API\n    const GoogleAuth = window.gapi.auth2.getAuthInstance();\n\n    //  Проверяем что jwt.decode() вернул значение exp, сравниваем\n    //  Если токен expired, запрашиваем и сохраняем новый. Если нет - передаем вызов дальше: next(action)\n    //  https://developers.google.com/identity/sign-in/web/reference#googleuserreloadauthresponse\n    return googleExpire && now > googleExpire\n      ? GoogleAuth.currentUser\n          .get()\n          .reloadAuthResponse()\n          .then(res => {\n            const googleToken = res.id_token;\n            return axios\n              .post(`${API_URL}/auth/google`, { token: googleToken })\n              .then(response => {\n                const token = response.data.token;\n                //  Получаем id пользователя из JWT токена\n                const userId = jsonwebtoken.decode(token).id;\n                store.dispatch(loginSuccess(token, googleToken, userName, userId));\n                next(action);\n              })\n              .catch(err => store.dispatch({ type: t.LOGIN_FAILED, payload: err }));\n          })\n          .catch(err => store.dispatch({ type: t.LOGIN_FAILED, payload: err }))\n      : next(action);\n  } else {\n    return next(action);\n  }\n};\n","import React from \"react\";\n\n//  Функции для валидации\nexport const required = value => (value ? undefined : \"Поле не может быть пустым\");\n\nconst minLength = min => value => (value.length >= min ? undefined : `Не менее ${min} символов`);\n\nexport const minLength6 = minLength(6);\n\n//  Функции для рендера полей формы с помощью redux-form\nexport const renderTitleField = field => {\n  const {\n    input,\n    label,\n    type,\n    meta: { touched, error }\n  } = field;\n\n  return (\n    <>\n      <input {...input} placeholder={label} type={type} className=\"input-title\" />\n      {touched && error && <div className=\"error-message\">{error}</div>}\n    </>\n  );\n};\n\nexport const renderContentField = field => {\n  const {\n    input,\n    label,\n    meta: { touched, error }\n  } = field;\n\n  return (\n    <>\n      <textarea {...input} placeholder={label} className=\"input-content\" rows=\"10\" />\n      {touched && error && <div className=\"error-message\">{error}</div>}\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { jwt } from \"./middlewares/jwt\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport { readFromLocalStorage } from \"./helpers/auth_helpers\";\nimport { initGoogleAPI } from \"./helpers/auth_helpers\";\nimport Header from \"./ui/header\";\nimport Footer from \"./ui/footer\";\nimport PostsList from \"./routes/posts_list\";\nimport PostFull from \"./routes/post_full\";\nimport EditPost from \"./routes/edit_post\";\nimport AddPost from \"./routes/add_post\";\nimport Info from \"./ui/info\";\n\nconst initialState = {\n  user: {\n    userName: null,\n    userId: null,\n    token: null,\n    googleToken: null,\n    isAuth: false\n  },\n  news: [],\n  error: null,\n  isLoading: false,\n  isDeleted: null\n};\n\n//  Инициализируем Google API\ninitGoogleAPI();\n\n//  Redux DevTools для dev mode\n//  https://github.com/zalmoxisus/redux-devtools-extension\nlet store;\nif (\n  process.env.NODE_ENV === \"development\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__()\n) {\n  const myStore = composeWithDevTools(applyMiddleware(jwt, thunk))(createStore);\n  store = myStore(reducers, initialState);\n} else {\n  store = createStore(reducers, initialState, applyMiddleware(jwt, thunk));\n}\n\n//  Checking local storage for JWT token\n//  Dispatch AUTH_SUCCESS if found\nconst userData = readFromLocalStorage();\nuserData.token &&\n  store.dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: userData\n  });\n\nconst App = () => {\n  return (\n    <div className=\"main-container\">\n      <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL || \"\"}>\n          <>\n            <Header />\n            <Switch>\n              <Route exact path=\"/news/add\" component={AddPost} />\n              <Route exact path=\"/news/:id/edit\" component={EditPost} />\n              <Route exact path=\"/news/:id\" component={PostFull} />\n              <Route exact path=\"/news\" component={PostsList} />\n              <Route exact path=\"/\" component={PostsList} />\n              <Route path=\"*\" component={Info} />\n            </Switch>\n            <Footer />\n          </>\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { signIn, signOut } from \"../actions/\";\n\nclass Login extends Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      userName: PropTypes.string,\n      userId: PropTypes.string,\n      token: PropTypes.string,\n      googleToken: PropTypes.string,\n      isAuth: PropTypes.bool.isRequired\n    }),\n    signIn: PropTypes.func.isRequired,\n    signOut: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { user } = this.props;\n\n    return user.isAuth ? (\n      <div className=\"header-login\">\n        <span>\n          Привет, <b>{user.userName}</b>!\n        </span>\n        <button onClick={this.props.signOut} className=\"login-button\">\n          Выйти\n        </button>\n        <Link to=\"/news/add\">\n          <i className=\"fas fa-plus add-icon\" title=\"Добавить новость\" />\n        </Link>\n      </div>\n    ) : (\n      <div className=\"header-login\">\n        <button onClick={this.props.signIn} className=\"login-button\">\n          Войти\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signIn, signOut }\n)(Login);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Login from \"./header_login\";\n\nconst Header = () => (\n  <header>\n    <div className=\"header-container\">\n      <div className=\"header-title\">\n        <Link to=\"/news\" title=\"Перейти на главную\">\n          <i className=\"fas fa-home\" />\n          <b>Главная</b>\n        </Link>\n      </div>\n      <Login />\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => (\n  <footer>\n    <div className=\"footer-container\">\n      <p className=\"text-small\">\n        {\"made by \"}\n        <a href=\"https://github.com/MikhailKarpov87/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          MikhailKarpov87\n        </a>\n      </p>\n\n      <p className=\"text-small\">\n        <a\n          href=\"https://maxpfrontend.ru/zametki/testovoe-zadanie-3/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Тестовое Задание 3 by maxpfrontend\n        </a>\n      </p>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { deletePost } from \"../../actions\";\n\nclass PostButtons extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    deletePost: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { id, deletePost } = this.props;\n\n    return (\n      <div className=\"buttons\">\n        <Link to={`/news/${id}/edit`}>\n          <i className=\"far fa-edit edit-icon\" />\n        </Link>\n\n        <i\n          className=\"far fa-trash-alt delete-icon\"\n          onClick={() => window.confirm(\"Вы уверены?\") && deletePost(id)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { deletePost }\n)(PostButtons);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PostInfo = props => {\n  const { author, date } = props;\n  return (\n    <div className=\"post-info\">\n      <div className=\"author-info\">\n        <i className=\"fas fa-user-circle\" />\n        {author}\n      </div>\n      <div className=\"date-info\">{date}</div>\n    </div>\n  );\n};\n\nPostInfo.propTypes = {\n  author: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired\n};\n\nexport default PostInfo;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport PostButtons from \"./post_buttons\";\nimport PostInfo from \"./post_info\";\n\nconst Post = props => {\n  const { id, title, content, author, touchDate, userIsAuthor } = props;\n  const shortContent = content.length > 200 ? content.substr(0, 200) + \"...\" : content;\n  const date = new Date(touchDate).toLocaleDateString(\"ru-RU\", {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\"\n  });\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-header\">\n        <div className=\"post-title\">\n          <Link to={`/news/${id}`}>\n            <h3>{title}</h3>\n          </Link>\n        </div>\n        {userIsAuthor && <PostButtons id={id} />}\n      </div>\n\n      <PostInfo author={author} date={date} />\n      <div className=\"post-body\">\n        <p>{shortContent}</p>\n      </div>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  touchDate: PropTypes.string.isRequired,\n  userIsAuthor: PropTypes.bool.isRequired\n};\n\nexport default Post;\n","import React from \"react\";\n\nconst Spinner = () => (\n  <div className=\"spinner\">\n    <i className=\"fas fa-circle-notch fa-2x\" />\n  </div>\n);\n\nexport default Spinner;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Info = props => {\n  const message = props.message || \"Страница не найдена\";\n  return (\n    <div className=\"message-container\">\n      <h3>{message}</h3>\n    </div>\n  );\n};\n\nInfo.propTypes = {\n  message: PropTypes.string\n};\n\nexport default Info;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { getNews } from \"../actions\";\nimport Post from \"../ui/post/post_short\";\nimport Spinner from \"../ui/spinner\";\nimport Info from \"../ui/info\";\n\nclass PostsList extends Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      userName: PropTypes.string,\n      userId: PropTypes.string,\n      token: PropTypes.string,\n      googleToken: PropTypes.string,\n      isAuth: PropTypes.bool.isRequired\n    }),\n    news: PropTypes.array.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    errorMessage: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    getNews: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    this.props.getNews();\n  }\n\n  render() {\n    const { news, user, isLoading } = this.props;\n\n    return isLoading ? (\n      <Spinner />\n    ) : !news.length ? (\n      <Info message=\"Новостей не найдено\" />\n    ) : (\n      <div className=\"content-container\">\n        {news.map(post => (\n          <Post\n            id={post._id}\n            key={post._id}\n            title={post.title}\n            content={post.content}\n            author={post.creator.displayName}\n            userIsAuthor={user.userId === post.creator._id}\n            touchDate={post.createDate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    news: state.news,\n    isLoading: state.isLoading,\n    isDeleted: state.isDeleted\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getNews }\n)(PostsList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { getPost, deletePost } from \"../actions\";\nimport Info from \"../ui/info\";\nimport PostButtons from \"../ui/post/post_buttons\";\nimport Spinner from \"../ui/spinner\";\nimport PostInfo from \"../ui/post/post_info\";\n\nclass PostFull extends Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      userName: PropTypes.string,\n      userId: PropTypes.string,\n      token: PropTypes.string,\n      googleToken: PropTypes.string,\n      isAuth: PropTypes.bool.isRequired\n    }),\n    news: PropTypes.array.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    isDeleted: PropTypes.string,\n    errorMessage: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    getPost: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { match, getPost } = this.props;\n    const { id } = match.params;\n    getPost(id);\n  }\n\n  shouldComponentUpdate(props) {\n    props.isDeleted === props.match.params.id && props.history.push(\"/news\");\n    return true;\n  }\n\n  render() {\n    const { match, news, error, isLoading, user, deletePost, history } = this.props;\n    const { id } = match.params;\n\n    if (isLoading && !error) {\n      return <Spinner />;\n    }\n\n    if (!news.find(news => news._id === id) || error) {\n      const message = error === \"Bad news item ID\" ? \"Новость не найдена\" : \"Ошибка загрузки\";\n      return <Info message={message} />;\n    } else {\n      const post = news.find(news => news._id === id);\n      const { _id, title, content, createDate, creator } = post;\n      const date = new Date(createDate).toLocaleDateString(\"ru-RU\", {\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\"\n      });\n\n      return (\n        <div className=\"content-container\">\n          <div className=\"post-container\">\n            <div className=\"post-header\">\n              <div className=\"post-title\">\n                <h3>{title}</h3>\n              </div>\n              {user.userId === post.creator._id && <PostButtons id={_id} history={history} />}\n            </div>\n\n            <PostInfo author={creator.displayName} date={date} />\n\n            <div className=\"post-body\">\n              <p>{content}</p>\n            </div>\n          </div>\n\n          {user.userId === post.creator._id && (\n            <div className=\"bottom-buttons\">\n              <Link to={`/news/${_id}/edit`}>\n                <button className=\"edit-button\">Редактировать</button>\n              </Link>\n\n              <button\n                onClick={() =>\n                  window.confirm(\"Вы уверены?\") &&\n                  deletePost(id, history).then(res => console.log(res))\n                }\n                className=\"delete-button\"\n              >\n                Удалить\n              </button>\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  news: state.news,\n  error: state.error,\n  isLoading: state.isLoading,\n  isDeleted: state.isDeleted\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPost, deletePost }\n)(PostFull);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { getPost, editPost } from \"../actions\";\nimport { required, renderTitleField, renderContentField } from \"../helpers/form_helpers\";\nimport { getErrorText } from \"../constants\";\nimport Info from \"../ui/info\";\nimport Spinner from \"../ui/spinner\";\n\nclass EditPost extends Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      userName: PropTypes.string,\n      userId: PropTypes.string,\n      token: PropTypes.string,\n      googleToken: PropTypes.string,\n      isAuth: PropTypes.bool.isRequired\n    }),\n    news: PropTypes.array.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    errorMessage: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    getPost: PropTypes.func.isRequired,\n    editPost: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    //  Если новости еще нет в state, делаем запрос к серверу\n    const { match, getPost } = this.props;\n    const { id } = match.params;\n\n    if (!this.props.news.find(news => news._id === id)) {\n      getPost(id);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    //  инициализируем форму после получения данных о новости\n    //  initialized, initialize() - из redux-form\n    const { match, initialize, initialized, news } = prevProps;\n    const post = news.find(post => post._id === match.params.id);\n    !initialized && post && initialize(post);\n  }\n\n  render() {\n    const {\n      match: {\n        params: { id }\n      },\n      news,\n      user,\n      errorMessage,\n      isLoading,\n      handleSubmit,\n      submitting,\n      editPost,\n      history\n    } = this.props;\n\n    if (isLoading) {\n      return <Spinner />;\n    }\n\n    //  Показываем ошибку, если новость с указанным id не найдена\n    if (!news.find(news => news._id === id)) {\n      return <Info message=\"Новость не найдена\" />;\n    }\n\n    const post = news.find(post => post._id === id);\n\n    //  Если пользователь не является автором или не залогинен - выдаем ошибку\n    if (!user.isAuth || user.userId !== post.creator._id) {\n      return <Info message=\"У вас нет доступа к этой странице\" />;\n    }\n\n    return (\n      <div className=\"content-container\">\n        <h2>Редактировать новость</h2>\n\n        <form\n          onSubmit={handleSubmit(event =>\n            editPost(post._id, event).then(\n              res => res.type === \"EDIT_POST_SUCCESS\" && history.push(`/news/${id}`)\n            )\n          )}\n        >\n          <div className=\"post-container\">\n            <Field\n              component={renderTitleField}\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Введите заголовок\"\n              validate={required}\n              key=\"title\"\n            />\n\n            <Field\n              component={renderContentField}\n              name=\"content\"\n              validate={required}\n              key=\"content\"\n            />\n            {errorMessage && <div className=\"error-message\">{getErrorText(errorMessage)}</div>}\n          </div>\n\n          <div className=\"bottom-buttons\">\n            <button type=\"submit\" className=\"edit-button\" disabled={submitting || errorMessage}>\n              Сохранить\n            </button>\n            <Link to={`/news/${post._id}`}>\n              <button className=\"delete-button\">Отменить</button>\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    news: state.news,\n    errorMessage: state.error,\n    isLoading: state.isLoading\n  };\n};\n\nconst ReduxEditForm = reduxForm({ form: \"edit_form\" })(EditPost);\n\nexport default connect(\n  mapStateToProps,\n  { getPost, editPost }\n)(ReduxEditForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { addPost } from \"../actions\";\nimport { required, renderTitleField, renderContentField } from \"../helpers/form_helpers\";\nimport { getErrorText } from \"../constants\";\nimport Spinner from \"../ui/spinner\";\nimport Info from \"../ui/info\";\n\nclass AddPost extends Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      userName: PropTypes.string,\n      userId: PropTypes.string,\n      token: PropTypes.string,\n      googleToken: PropTypes.string,\n      isAuth: PropTypes.bool.isRequired\n    }),\n    news: PropTypes.array.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    errorMessage: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    addPost: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      user,\n      isLoading,\n      errorMessage,\n      handleSubmit,\n      submitting,\n      pristine,\n      addPost,\n      history\n    } = this.props;\n\n    if (isLoading) {\n      return <Spinner />;\n    }\n\n    if (!user.isAuth) {\n      return <Info message=\"У вас нет доступа к этой странице\" />;\n    }\n\n    return (\n      <div className=\"content-container\">\n        <h2>Добавить новость</h2>\n\n        <form\n          onSubmit={handleSubmit(event =>\n            addPost(event).then(res => res.type === \"ADD_POST_SUCCESS\" && history.push(\"/news\"))\n          )}\n        >\n          <div className=\"post-container\">\n            <Field\n              component={renderTitleField}\n              type=\"text\"\n              name=\"title\"\n              label=\"Введите заголовок\"\n              validate={required}\n              key=\"title\"\n            />\n\n            <Field\n              component={renderContentField}\n              name=\"content\"\n              label=\"Введите текст новости\"\n              validate={required}\n              key=\"content\"\n            />\n\n            {errorMessage && <div className=\"error-message\">{getErrorText(errorMessage)}</div>}\n          </div>\n\n          <div className=\"bottom-buttons\">\n            <button\n              type=\"submit\"\n              className=\"edit-button\"\n              disabled={submitting || pristine || errorMessage}\n            >\n              Сохранить\n            </button>\n            <Link to={`/news`}>\n              <button className=\"delete-button\">Отменить</button>\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    news: state.news,\n    errorMessage: state.error,\n    isLoading: state.isLoading\n  };\n};\n\nconst ReduxEditForm = reduxForm({ form: \"add_form\" })(AddPost);\n\nexport default connect(\n  mapStateToProps,\n  { addPost }\n)(ReduxEditForm);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}